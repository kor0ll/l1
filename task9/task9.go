package main

import "fmt"

//Разработать конвейер чисел. Даны два канала: в первый пишутся числа (x) из массива, во второй — результат операции x*2,
//после чего данные из второго канала должны выводиться в stdout.

func main() {
	sl := []int{1, 2, 3, 4, 5, 6, 7, 8}
	//канал для записи чисел x
	ch1 := make(chan int)
	//канал для результата x*2
	ch2 := make(chan int)

	//канал для выхода из горутины, умножающей числа
	quit := make(chan struct{})

	//горутина принимает x из первого канала и отдает второму каналу x*2
	go func(ch1 chan int, ch2 chan int) {
		for {
			select {
			case num := <-ch1:
				ch2 <- num * 2
			case <-quit:
				return
			}
		}
	}(ch1, ch2)
	//горутина пишет числа в первый канал
	go func(sl []int) {
		for _, v := range sl {
			ch1 <- v
		}
	}(sl)

	//принимаем из второго канала x*2 и выводим
	for range sl {
		num := <-ch2
		fmt.Println(num)
	}
	//останавливаем горутину, которая производит вычисления
	quit <- struct{}{}
}
